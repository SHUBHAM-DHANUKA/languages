{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "@LANGUAGES = new Set\nelements = []\n\nfor compiler in COMPILERS\n  {name, source, target, type} = compiler\n  for language in [source, target]\n    continue if LANGUAGES.has language\n    elements.push\n      data:\n        id: language\n        color: COLORS[language] or '#ccc'\n    LANGUAGES.add language\n\n  elements.push\n    data:\n      id: name\n      source: source\n      target: target\n      type: type\n      sourceColor: COLORS[source] or '#ccc'\n      targetColor: COLORS[target] or '#ccc'\n\ngraph = null\n\nwindow.onload = ->\n  graph = cytoscape\n    container: document.getElementById 'graph'\n    elements: elements\n    style: [\n      selector: 'node'\n      style:\n        'label': 'data(id)'\n        'font-size': (ele) -> Math.max(14, 9 + 0.25 * ele.incomers().length)\n        'width': 'label'\n        'height': (ele) -> Math.min(50, 10 + 2 * ele.incomers().length)\n        'color': 'white'\n        'background-color': 'data(color)'\n        'text-valign': 'center'\n        'padding-left': 10\n        'padding-right': 10\n        'padding-top': 10\n        'padding-bottom': 10\n    ,\n      selector: 'edge'\n      style:\n        'label': 'data(id)'\n        'width': 3\n        'font-size': (ele) ->\n          Math.min(Math.max(22 - ele.style()['label'].length, 9), 12)\n        'color': 'black'\n        'line-color': 'data(sourceColor)'\n        'target-arrow-color': 'data(sourceColor)'\n        'target-arrow-shape': 'triangle'\n        'text-rotation': 'autorotate'\n        'text-margin-y': -10\n        'opacity': 0.7\n        'curve-style': 'bezier'\n    ]\n\n  queryParams = {}\n  for param in location.search.slice(1).split('&')\n    [key, value] = param.split '='\n    queryParams[key] = decodeURIComponent value\n\n  {source, target, direct} = queryParams\n\n  form = document.forms[0]\n  [form.source.value, form.target.value, form.direct.checked] =\n    [source or '', target or '', direct]\n\n  compile source, target, direct if source or target\n\n  layout = graph.layout\n    name: 'cose-bilkent'\n    idealEdgeLength: 100\n    nodeRepulsion: 100000\n    padding: 40\n    randomize: false\n\n  layout.run()\n\n@filter = (e) ->\n  e.preventDefault()\n  form = e.currentTarget\n\n  [source, target, direct] =\n    [form.source.value, form.target.value, form.direct.checked]\n\n  updateURL source: source, target: target, direct: direct\n  compile source, target, direct\n\n@show = ->\n  updateURL()\n  compile()\n\ncompile = (source, target, direct) ->\n  info.innerText = 'Select a language from the list'\n\n  return if (source and not LANGUAGES.has source) or\n            (target and not LANGUAGES.has target)\n\n  sourceNode = graph.getElementById(source) if source\n  targetNode = graph.getElementById(target) if target\n\n  if sourceNode and targetNode\n    elements = (\n      if direct then sourceNode.edgesTo targetNode\n      else sourceNode.successors().intersection targetNode.predecessors()\n    ).add [sourceNode, targetNode]\n    showElements elements\n    text = ''\n\n  else if sourceNode\n    elements = (\n      if direct then sourceNode.outgoers() else sourceNode.successors()\n    ).add sourceNode\n    showElements elements\n\n    count = elements.nodes().length - 1\n    text =\n      if count is 1 then \"#{source} compiles to #{count} language\"\n      else \"#{source} compiles to #{count} languages\"\n    text += \" directly\" if direct\n\n  else if targetNode\n    elements = (\n      if direct then targetNode.incomers() else targetNode.predecessors()\n    ).add targetNode\n    showElements elements\n\n    count = elements.nodes().length - 1\n    text =\n      if count is 1 then \"#{count} language compiles to #{target}\"\n      else \"#{count} languages compile to #{target}\"\n    text += \" directly\" if direct\n\n  else\n    elements = graph.elements()\n    elements.style display: 'element'\n    text = \"#{LANGUAGES.size} languages\"\n\n  info.innerText = \"#{text}\\n#{elements.edges().length} compilers\"\n\nupdateURL = (params) ->\n  queryParts = []\n  for key, value of params\n    queryParts.push \"#{key}=#{encodeURIComponent value}\" if value\n\n  history.replaceState params, '',\n    if queryParts.length then \"?#{queryParts.join '&'}\" else location.pathname\n\nshowElements = (elements) ->\n  graph.batch ->\n    graph.elements().style display: 'none'\n    elements.style display: 'element'\n"
  ]
}